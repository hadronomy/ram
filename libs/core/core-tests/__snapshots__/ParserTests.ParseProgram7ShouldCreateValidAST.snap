(program (line (comment # Programa que lee los elementos de la cinta de entrada hasta)) \n (line (comment # que encuentra un 0 y va guardando los valores en registros)) \n (line (comment # sucesivos comenzando por el registro R3. Luego, multiplica)) \n (line (comment # todos esos valores por 3 y los escribe en la cinta de salida)) \n\n (line (comment # Se usa direccionamiento indirecto mediante el registro R2)) \n\n (line (instruction load (argument (immediate = 3)))) \n (line (instruction store (argument (direct 2)))) \n\n (line (label_definition lee : (instruction read (argument (direct 1))))) \n (line (instruction load (argument (direct 1)))) \n (line (instruction jzero (argument (label fin)))) \n\n (line (instruction store (argument (indirect * 2)))) \n (line (instruction load (argument (direct 2)))) \n (line (instruction add (argument (immediate = 1)))) \n (line (instruction store (argument (direct 2)))) \n\n (line (instruction jump (argument (label lee)))) \n\n (line (label_definition fin : (instruction load (argument (immediate = 0))))) \n (line (instruction store (argument (indirect * 2)))) \n (line (instruction load (argument (immediate = 3)))) \n (line (instruction store (argument (direct 2)))) \n\n (line (label_definition carga : (instruction load (argument (indirect * 2))))) \n (line (instruction jzero (argument (label fin2)))) \n\n (line (instruction mul (argument (immediate = 3)))) \n (line (instruction store (argument (indirect * 2)))) \n (line (instruction write (argument (indirect * 2)))) \n\n (line (instruction load (argument (direct 2)))) \n (line (instruction add (argument (immediate = 1)))) \n (line (instruction store (argument (direct 2)))) \n\n (line (instruction jump (argument (label carga)))) \n\n (line (label_definition fin2 : (instruction halt))) \n <EOF>)
