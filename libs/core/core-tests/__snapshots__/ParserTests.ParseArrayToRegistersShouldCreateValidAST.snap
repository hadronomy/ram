(program (line (comment # Program that reads array size N and N elements)) \n (line (comment # Stores elements in consecutive registers starting from R2)) \n\n (line (instruction read (argument (direct 0))) (comment # Read size into R1)) \n (line (instruction store (argument (direct 1))) (comment # R1 will be our size)) \n (line (instruction load (argument (immediate = 0)))) \n (line (instruction store (argument (direct 2))) (comment # R2 will be our index register)) \n (line (instruction load (argument (direct 1)))) \n (line (label_definition loop : (instruction jzero (argument (label fin))) (comment # If size is 0, we're done))) \n\n (line (instruction read (argument (direct 0))) (comment # Read next element into R0)) \n (line (instruction store (argument (direct 3 (accessor [ (index (direct 2)) ])))) (comment # Store element at address in R2)) \n (line (instruction write (argument (direct 3 (accessor [ (index (direct 2)) ])))) (comment # Write element to output)) \n\n (line (instruction load (argument (direct 2))) (comment # Increment register index)) \n (line (instruction add (argument (immediate = 1)))) \n (line (instruction store (argument (direct 2)))) \n\n (line (instruction load (argument (direct 1))) (comment # Decrement counter)) \n (line (instruction sub (argument (immediate = 1)))) \n (line (instruction store (argument (direct 1)))) \n\n (line (instruction jump (argument (label loop))) (comment # Continue until done)) \n\n (line (label_definition fin : (instruction halt))) \n <EOF>)
