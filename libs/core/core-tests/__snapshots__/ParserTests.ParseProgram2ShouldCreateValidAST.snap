(program (line (comment # Programa que reconoce el lenguaje formado por las)) \n (line (comment # palabras que tienen el mismo número de 1 y 2.)) \n (line (comment # Las palabras finalizan con el número 0.)) \n (line (comment # Los únicos símbolos posibles de entrada son 0, 1 y 2.)) \n (line (comment # La cinta de salida contendrá un 1 si se reconoce la palabra)) \n (line (comment # y un 0 si no pertenece al lenguaje)) \n\n (line (instruction LOAD (argument (immediate = 0)))) \n (line (instruction STORE (argument (direct 2)))) \n (line (instruction READ (argument (direct 1)))) \n (line (label_definition while : (instruction LOAD (argument (direct 1))))) \n (line (instruction JZERO (argument (label end_wh)))) \n (line (instruction LOAD (argument (direct 1)))) \n (line (instruction SUB (argument (immediate = 1)))) \n (line (instruction JZERO (argument (label else)))) \n (line (instruction LOAD (argument (direct 2)))) \n (line (instruction SUB (argument (immediate = 1)))) \n (line (instruction STORE (argument (direct 2)))) \n (line (instruction JUMP (argument (label end_if)))) \n (line (label_definition else : (instruction LOAD (argument (direct 2))))) \n (line (instruction ADD (argument (immediate = 1)))) \n (line (instruction STORE (argument (direct 2)))) \n (line (label_definition end_if : (instruction READ (argument (direct 1))))) \n (line (instruction JUMP (argument (label while)))) \n (line (label_definition end_wh : (instruction LOAD (argument (direct 2))))) \n (line (instruction JZERO (argument (label iguales)))) \n (line (instruction WRITE (argument (immediate = 0)))) \n (line (instruction JUMP (argument (label fin)))) \n (line (label_definition iguales : (instruction WRITE (argument (immediate = 1))))) \n (line (label_definition fin : (instruction HALT))) <EOF>)
